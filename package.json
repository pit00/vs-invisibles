{
    "name": "whitespace-counter",
    "icon": "assets/icon.png",
    "displayName": "Whitespace Counter",
    "description": "Show a numeric counter between characters",
    "publisher": "pit00",
    "version": "1.1.1",
    "license": "MIT",
    "repository": {
        "type": "git",
        "url": "https://github.com/pit00/vs-invisibles/"
    },
    "engines": {
        "vscode": "^1.76.0"
    },
    "categories": [
        "Other"
    ],
    "activationEvents": [
        "onStartupFinished"
    ],
    "main": "./dist/extension.js",
    "contributes": {
        "configuration": {
            "title": "Whitespace Counter",
            "properties": {
                "whitespaceCounter.enabledLanguageIds": {
                    "order": 0,
                    "type": "array",
                    "default": [],
                    "description": "A list of languageIds for which this extension should be enabled. If empty, it will be enabled for all languageIds."
                },
                "whitespaceCounter.updateDelay": {
                    "order": 1,
                    "type": "number",
                    "default": 100,
                    "description": "Delay time in milliseconds before updating."
                },
                "whitespaceCounter.color": {
                    "order": 2,
                    "type": "string",
                    "default": "rgba(117, 255, 205, 0.38)",
                    "description": "General color string (hex, rgba, rgb).",
                    "pattern": "^(#[0-9a-fA-F]{6})|(rgb\\(\\s*(25[0-5]|2[0-4]\\d|1\\d{2}|\\d{1,2})\\s*,\\s*(25[0-5]|2[0-4]\\d|1\\d{2}|\\d{1,2})\\s*,\\s*(25[0-5]|2[0-4]\\d|1\\d{2}|\\d{1,2})\\s*\\))|(rgba\\(\\s*(25[0-5]|2[0-4]\\d|1\\d{2}|\\d{1,2})\\s*,\\s*(25[0-5]|2[0-4]\\d|1\\d{2}|\\d{1,2})\\s*,\\s*(25[0-5]|2[0-4]\\d|1\\d{2}|\\d{1,2})\\s*,\\s*[01](\\.\\d+)?\\s*\\))$",
                    "patternErrorMessage": "Specify the color string in \"#RRGGBB\", \"rgb(R,G,B)\" or \"rgba(R,G,B,A)\" format."
                },
                "whitespaceCounter.space.enable": {
                    "order": 3,
                    "type": "boolean",
                    "default": false,
                    "description": "Enables making spaces visible."
                },
                "whitespaceCounter.space.text": {
                    "order": 4,
                    "type": "string",
                    "default": "₁",
                    "description": "Text to overlay of spaces."
                },
                "whitespaceCounter.eof.enable": {
                    "order": 5,
                    "type": "boolean",
                    "default": true,
                    "description": "Enables making EOF visible."
                },
                "whitespaceCounter.eof.text": {
                    "order": 6,
                    "type": "string",
                    "default": "⛶",
                    "description": "Text of EOF."
                },
                "whitespaceCounter.eof.color": {
                    "order": 7,
                    "type": "string",
                    "default": "rgba(117, 255, 205, 0.38)",
                    "description": "Color string (hex, rgba, rgb) for EOF.",
                    "pattern": "^(#[0-9a-fA-F]{6})|(rgb\\(\\s*(25[0-5]|2[0-4]\\d|1\\d{2}|\\d{1,2})\\s*,\\s*(25[0-5]|2[0-4]\\d|1\\d{2}|\\d{1,2})\\s*,\\s*(25[0-5]|2[0-4]\\d|1\\d{2}|\\d{1,2})\\s*\\))|(rgba\\(\\s*(25[0-5]|2[0-4]\\d|1\\d{2}|\\d{1,2})\\s*,\\s*(25[0-5]|2[0-4]\\d|1\\d{2}|\\d{1,2})\\s*,\\s*(25[0-5]|2[0-4]\\d|1\\d{2}|\\d{1,2})\\s*,\\s*[01](\\.\\d+)?\\s*\\))$",
                    "patternErrorMessage": "Specify the color string in \"#RRGGBB\", \"rgb(R,G,B)\" or \"rgba(R,G,B,A)\" format."
                },
                "whitespaceCounter.multiple.enable": {
                    "order": 8,
                    "type": "boolean",
                    "default": true,
                    "description": "Enable a numeric counter for spaces between characters."
                },
                "whitespaceCounter.extra.enable": {
                    "order": 9,
                    "type": "boolean",
                    "default": true,
                    "description": "Show TAB and CR."
                }
            }
        }
    },
    "scripts": {
        "vscode:prepublish": "npm run package",
        "compile": "webpack",
        "watch": "webpack --watch",
        "package": "webpack --mode production --devtool hidden-source-map",
        "compile-tests": "tsc -p . --outDir out",
        "watch-tests": "tsc -p . -w --outDir out",
        "pretest": "npm run compile-tests && npm run compile && npm run lint",
        "lint": "eslint src --ext ts",
        "test": "node ./out/test/runTest.js"
    },
    "devDependencies": {
        "@types/vscode": "^1.76.0",
        "@types/glob": "^8.1.0",
        "@types/mocha": "^10.0.1",
        "@types/node": "16.x",
        "@typescript-eslint/eslint-plugin": "^5.53.0",
        "@typescript-eslint/parser": "^5.53.0",
        "eslint": "^8.34.0",
        "glob": "^8.1.0",
        "mocha": "^10.2.0",
        "typescript": "^4.9.5",
        "ts-loader": "^9.4.2",
        "webpack": "^5.75.0",
        "webpack-cli": "^5.0.1",
        "@vscode/test-electron": "^2.2.3"
    }
}
